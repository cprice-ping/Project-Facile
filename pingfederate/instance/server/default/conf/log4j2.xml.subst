<?xml version="1.0" encoding="UTF-8"?>

<!-- ===================================================================== -->
<!--                                                                       -->
<!--  Log4J2 Configuration                                                 -->
<!--                                                                       -->
<!-- ===================================================================== -->

<!--
   | For more configuration information and examples see the Apache Log4j2
   | website: http://logging.apache.org/log4j/2.x/
 -->

<!--
   | Default logging level is set to INFO for most Java packages.
   | INFO log level includes: INFO, WARN and ERROR level messages.
   | On upgrade, the new default log level will take effect, if no custom settings exist.
   | If the log4j2.xml has been customized, the custom settings will be preserved on upgrade.
-->

<!--
   | Due to a bug in Log4J2, there will a message "ERROR appender <Failover-Appender> has no parameter that matches element Failovers" upon startup
   | if Failover Appenders are enabled.  The failover appenders are configured correctly and are functional. Please disregard the error message.
   |
   | monitorInterval - the number of seconds before Log4J2 detects changes to the configuration file and reconfigures itself.
 -->
<Configuration monitorInterval="30" packages="com.pingidentity.log4j.pattern,com.pingidentity.log4j.layout,com.pingidentity.log4j.appender" shutdownHook="disable">
    <Appenders>

        <!-- ============================== -->
        <!-- Append messages to the console -->
        <!-- ============================== -->
        <!-- 
        <Console name="CONSOLE" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{ABSOLUTE} %-5p [%c{1}] %m{nolookups}%n" />
        </Console>
        -->

        <Console name="CONSOLE" target="SYSTEM_OUT">
            <JsonLayout complete="false" compact="true" eventEol="true">
            </JsonLayout>
        </Console>

        <Console name="CONSOLE-ERROR" target="SYSTEM_ERR">
            <PatternLayout pattern="%d{ABSOLUTE} %-5p [%c{1}] %m{nolookups}%n" />
        </Console>

        <Console name="CONSOLE-PROVISIONER" target="SYSTEM_OUT">
            <PatternLayout
                    pattern="%d{ABSOLUTE} %-5p [%c{1}] %m{nolookups} %x %X{ChannelCode}%n" />
        </Console>

        <!-- ================================= -->
        <!-- Preserve messages in a local file -->
        <!-- ================================= -->

        <!-- Main log : A size based file rolling appender -->
        <RollingFile name="FILE" fileName="${sys:pf.log.dir}/server.log"
                     filePattern="${sys:pf.log.dir}/server.log.%i" ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead
                    of system's default encoding.
                <charset>UTF-8</charset> -->
                <pattern>%d %X{trackingid} %-5p [%c] %m{nolookups}%n</pattern>
            </PatternLayout>
            <Policies>
                <SizeBasedTriggeringPolicy size="${PF_LOG_SIZE_MAX}" />
            </Policies>
            <DefaultRolloverStrategy max="${PF_LOG_NUMBER}" />
        </RollingFile>

        <!-- SAML Transaction log : A time/date based rolling appender -->
        <RollingFile name="SamlTransaction" fileName="${sys:pf.log.dir}/transaction.log"
                     filePattern="${sys:pf.log.dir}/transaction.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead
                    of system's default encoding.
                <charset>UTF-8</charset> -->
                <pattern>%d %m{nolookups}%n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
                <SizeBasedTriggeringPolicy size="${PF_LOG_SIZE_MAX}" />
            </Policies>
            <DefaultRolloverStrategy max="${PF_LOG_NUMBER}" />
        </RollingFile>

        <RollingFile name="SecurityAudit2File" fileName="${sys:pf.log.dir}/audit.log"
                     filePattern="${sys:pf.log.dir}/audit.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead
                    of system's default encoding. <charset>UTF-8</charset> -->

                <!-- Available fields for ConversionPattern:
                %d - transaction time
                %X{event} - event
                %X{subject} - user name
                %X{ip} - client source IP
                %X{app} - target application URL
                %X{connectionid} - partner ID
                %X{virtualserverid} - virtual server ID
                %X{protocol} - protocol (e.g. SAML20)
                %X{host} - host
                %X{role} - role (IdP, SP)
                %X{status} - the status of the SSO request (success, failure, authn_attempt)
                %X{localuserid} - SP local user ID (available only when account linking is used)
                %X{attributes} - a list of all attributes
                %X{trackingid} - tracking ID which is unique for a user session. It is used for debugging purposes in the server log
                %X{sessiongroupid} - Internal ID for a group of persistent sessions associated with a single browser instance via the PF.PERSISTENT cookie. It is only set if the request has triggered session lookup.
                %X{sri} - The session reference identifier (SRI) for the user, which can be passed to the session revocation API to revoke the user's sessions. It is only set if the request has triggered session lookup.
                %X{pfversion} - PingFederate version
                %X{adapterid} - adapter instance ID(s) that were invoked. You can also use authenticationsourceid (for SP connections) or targetsessionid (for IdP connections) to log adapters and connections that were invoked.
                %X{authenticationsourceid} - This will be the IdP adapter ID(s) or the IdP connection partner entity ID(s) that were invoked in an authentication/logout flow. Multiple authentication sources will appear as an array, i.e. [idpadapter1, idpconn1]
                %X{validatorid} - ID of the Password Credentials Validator used
                %X{targetsessionid} - For IdP connections' browser SSO, this will be the SP adapter ID(s) or the SP connection partner entity ID(s) that were invoked in an authentication/logout flow. Multiple target sessions will appear as an array, i.e. [spadapter1, spconn1]
                %X{description} - description of failure

                %X{assertionid} - ID from Assertion
                %X{initiator} - Who initiated the SAML transaction (e.g.: SP)
                %X{inmessagetype} - high level (protocol) message type
                %X{inresponseto} - the InResponseTo attribute from the Response
                %X{inxmlmsg} - the incoming XML message
                %X{outxmlmsg} - the produced, outgoing XML message
                %X{outurl} - URL where the protocol response was sent. For security, all query parameters and URL fragments are excluded.
                %X{requestid} - ID of the original request
                %X{responseid} - ID of the response

                %X{accessgrantguid} - The GUID of the OAuth Access Grant
                %X{attrackingid} - OAuth Access Token tracking ID. It is used to debug the flow of OAuth access tokens in the audit log and between PingFederate and PingAccess
                %X{granttype} - OAuth grant type(s)

                %X{stspluginid} - ID of the Token Processor / Token Generator used (STS only)

                %X{requeststarttime} - start time of the request (milliseconds since midnight, January 1, 1970 UTC).
                %X{responsetime} - time to process the request, in milliseconds

                %header{a-header-name} - HTTP request header value for the given HTTP request header name
                %parameter{parameter-name} - HTTP request parameter value for the given HTTP request parameter name
                %trackedparameter{parameter-name} - Values for a configured tracked parameter that was stored at the start of the transaction
                -->
                <pattern>%d| %X{trackingid}| %X{event}| %X{subject}| %X{ip} | %X{app}| %X{connectionid}| %X{protocol}| %X{host}| %X{role}| %X{status}| %X{adapterid}| %X{description}| %X{responsetime} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
                <SizeBasedTriggeringPolicy size="${PF_LOG_SIZE_MAX}" />
            </Policies>
            <DefaultRolloverStrategy max="${PF_LOG_NUMBER}" />
        </RollingFile>

        <!-- Admin Audit log : A time/date based rolling appender -->
        <RollingFile name="AdminAudit" fileName="${sys:pf.log.dir}/admin.log"
                     filePattern="${sys:pf.log.dir}/admin.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead
                    of system's default encoding.
                <charset>UTF-8</charset> -->
                <pattern>%d | %X{user} | %X{roles} | %X{ip} | %X{component} | %X{event} | %X{eventdetailid} | %m{nolookups}%n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
                <SizeBasedTriggeringPolicy size="${PF_LOG_SIZE_MAX}" />
            </Policies>
            <DefaultRolloverStrategy max="${PF_LOG_NUMBER}" />
        </RollingFile>

        <!-- Admin Event Detail Audit log : A time/date based rolling appender -->
        <RollingFile name="AdminEventDetailAudit" fileName="${sys:pf.log.dir}/admin-event-detail.log"
                     filePattern="${sys:pf.log.dir}/admin-event-detail.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead
                    of system's default encoding.
                <charset>UTF-8</charset> -->
                <pattern>%X{eventdetailid} | %X{filename} | %X{delta} | line %X{position} | %m{nolookups}%n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
                <SizeBasedTriggeringPolicy size="${PF_LOG_SIZE_MAX}" />
            </Policies>
            <DefaultRolloverStrategy max="${PF_LOG_NUMBER}" />
        </RollingFile>

        <!-- Admin API Audit log : A time/date based rolling appender -->
        <RollingFile name="AdminApiAudit" fileName="${sys:pf.log.dir}/admin-api.log"
                     filePattern="${sys:pf.log.dir}/admin-api.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead
                    of system's default encoding.
                <charset>UTF-8</charset> -->

                <!-- Available fields for ConversionPattern:
                %d - transaction time
                %X{api.user} - API client identifier
                %X{api.authtype} - type of API authentication used
                %X{api.clientip} - client source IP
                %X{api.httpmethod} - HTTP method invoked
                %X{api.url} - URL for the request
                %X{api.status} - HTTP status code for the response
                %X{api.request} - parameters from the request body
                %X{api.response} - parameters from the response body
                -->
                <pattern>%d| %X{api.user}| %X{api.authtype}| %X{api.clientip}| %X{api.httpmethod}| %X{api.url}| %X{api.status} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
                <SizeBasedTriggeringPolicy size="${PF_LOG_SIZE_MAX}" />
            </Policies>
            <DefaultRolloverStrategy max="${PF_LOG_NUMBER}" />
        </RollingFile>

        <!-- Runtime API Audit log : A time/date based rolling appender -->
        <RollingFile name="RuntimeApiAudit" fileName="${sys:pf.log.dir}/runtime-api.log"
                     filePattern="${sys:pf.log.dir}/runtime-api.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead
                    of system's default encoding.
                    <charset>UTF-8</charset> -->

                <!-- Available fields for ConversionPattern:
                %d - transaction time
                %X{api.user} - API client identifier
                %X{api.authtype} - type of API authentication used
                %X{api.clientip} - client source IP
                %X{api.httpmethod} - HTTP method invoked
                %X{api.url} - URL for the request
                %X{api.status} - HTTP status code for the response
                %X{api.request} - parameters from the request body
                %X{api.response} - parameters from the response body
                -->
                <pattern>%d| %X{api.user}| %X{api.authtype}| %X{api.clientip}| %X{api.httpmethod}| %X{api.url}| %X{api.status} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
                <SizeBasedTriggeringPolicy size="${PF_LOG_SIZE_MAX}" />
            </Policies>
            <DefaultRolloverStrategy max="${PF_LOG_NUMBER}" />
        </RollingFile>

        <!-- Provisioner log : A time/date based rolling appender -->
        <RollingFile name="ProvisionerLog" fileName="${sys:pf.log.dir}/provisioner.log"
                     filePattern="${sys:pf.log.dir}/provisioner.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d{ABSOLUTE} %-5p [%c{1}] %m{nolookups} %x %X{ChannelCode}%n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
                <SizeBasedTriggeringPolicy size="${PF_LOG_SIZE_MAX}" />
            </Policies>
            <DefaultRolloverStrategy max="${PF_LOG_NUMBER}" />
        </RollingFile>

        <!-- Outbound provisioner audit log: A time/date based rolling appender -->
        <RollingFile name="OutboundProvisionerEventToFile"
                     fileName="${sys:pf.log.dir}/provisioner-audit.log"
                     filePattern="${sys:pf.log.dir}/provisioner-audit.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead
                    of system's default encoding.
                <charset>UTF-8</charset> -->

                <!-- Available fields for ConversionPattern:
                %d 					  - transaction time
                %X{cycle_id}  		  - Unique Identifier for each provisioning cycle
                %X{channel_id}        - Unique Identifier for Provisioning Channel between source and target
                %X{event_type} 		  - Type of Provisioning event such as CREATE,UPDATE,etc.,
                %X{source_id}         - Provisioning Source ID
                %X{target_id}         - Provisioning Target ID
                %X{is_success}        - Flag to show whether the event was successful or not. True in case of success, false otherwise.
                %X{non_success_cause} - Description of failure cause
                -->
                <pattern>%d| %X{cycle_id}| %X{channel_id}| %X{event_type}| %X{source_id}| %X{target_id}| %X{is_success}| %X{non_success_cause} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
                <SizeBasedTriggeringPolicy size="${PF_LOG_SIZE_MAX}" />
            </Policies>
            <DefaultRolloverStrategy max="${PF_LOG_NUMBER}" />
        </RollingFile>

    </Appenders>

    <Loggers>

        <!-- ================ -->
        <!-- Limit categories -->
        <!-- ================ -->

        <!-- Set these to DEBUG to log more things -->
        <Logger name="org.sourceid" level="${PF_LOG_LEVEL}" />
        <Logger name="com.pingidentity" level="${PF_LOG_LEVEL}" />
        <!-- -->

        <!-- Dialing down the PingOne IKs logging -->
        <Logger name="com.pingidentity.oobauth.pingone.mfa" level="INFO" />
        <Logger name="com.pingidentity.adapters.pingone.risk.shade" level="INFO" />
        <Logger name="com.pingidentity.adapters.pingone.mfa.shade" level="INFO"/>
        <Logger name="com.pingidentity.adapters.pingone.verify.shade" level="INFO"/>
        <Logger name="com.pingidentity.integrations.provisioner.pingone.shaded" level="INFO"/>
        <Logger name="com.pingidentity.adapters.pingone.davinci.shade" level="INFO"/>
        <Logger name="com.pingidentity.shaded.org.apache.hc.client5" level="INFO"/>
        
        <!-- Dialing down other DEBUG things -->
        <Logger name="org.sourceid.servlet.HttpServletRespProxy" level="INFO" />
        <Logger name="org.sourceid.websso.servlet.IntegrationControllerServlet" level="INFO" />
        <Logger name="org.sourceid.saml20.service.impl" level="INFO" />
        <Logger name="com.pingidentity.jgroups.MuxInvocationHandler" level="INFO" />
        <Logger name="org.sourceid.util.log.internal.TrackingIdSupport" level="INFO" />
        <Logger name="org.sourceid.saml20.domain.mgmt.impl.ReplicationStateManagerImpl" level="INFO" />
        <Logger name="com.pingidentity.common.util.timers.EventTimer" level="INFO" />
        <Logger name="com.pingidentity.crypto.jwk.JwkState" level="INFO" />
        <Logger name="org.sourceid.saml20.state.IdpSessionRegistrySupport" level="INFO" />
        <Logger name="org.sourceid.saml20.domain.datasource.tag.DataSourceTagUtil" level="INFO" />
        <Logger name="org.sourceid.saml20.bindings.BindingServiceImpl" level="INFO" />
        <Logger name="org.sourceid.openid.connect.util.HttpConnectionPoolingManager" level="INFO" />
        <Logger name="com.pingidentity.configservice.impl.ConfigStoreImpl" level="INFO" />
        <Logger name="org.sourceid.saml20.domain.mgmt.impl.PluginManagementSupport" level="INFO" />
        <Logger name="org.sourceid.saml20.service.session.StoredSessionServiceImpl" level="INFO" />
        <Logger name="org.jgroups.protocols.TCP_NIO2" level="ERROR" />
        <Logger name="org.sourceid.saml20.profiles.ProfileProcessFactory" level="INFO" />
        <Logger name="com.pingidentity.common.util.ldap.LDAPUtil" level="INFO" />
        <Logger name="com.pingidentity.crypto.OCSPCheckerImpl" level="INFO" />
        <Logger name="com.pingidentity.pingonev2.PingOneV2APIClient" level="INFO" />

        <!-- log4j2.xml defaults -->
        <Logger name="org.apache.http.wire" level="INFO" />
        <Logger name="com.pingidentity.pf.email" level="INFO" />
        <Logger name="org.sourceid.saml20.util.SystemUtil" level="INFO" additivity="false">
            <AppenderRef ref="CONSOLE" />
            <AppenderRef ref="FILE" />
        </Logger>
        <!--
            Uncomment HttpRequestHeaderFilter logger for logging of all HTTP request header values
            WARNING: This is intended for debugging purposes only. Sensitive information, such as passwords, may be
            logged with this Logger.
        -->
        <!--
        <Logger name="org.sourceid.servlet.filter.HttpRequestHeaderFilter" level="TRACE" />
        -->
        <!--
            Uncomment HttpRequestParameterFilter logger for logging of all HTTP request parameter values
            WARNING: This is intended for debugging purposes only. Sensitive information, such as passwords, may be
            logged with this Logger.
        -->
        <!--
        <Logger name="org.sourceid.servlet.filter.HttpRequestParameterFilter" level="TRACE" />
        -->
        <!--
            Uncomment OutMessageContext logger to provide more information,
            This may add PII information to logs.
        -->
        <!--
        <Logger name="org.sourceid.websso.wrapper.OutMessageContext" level="TRACE" />
        -->
        <Logger name="com.jolbox" level="OFF" />
        <Logger name="com.pingidentity.crypto.CertificateServiceImpl" level="INFO" />
        <!-- Adjust the priority value to DEBUG to get additional logging to help troubleshoot XML Signature problems -->
        <Logger name="org.sourceid.common.dsig" level="INFO" />
        <Logger name="org.sourceid.saml20.domain.mgmt.impl.PluginSupport" level="INFO" />
        <Logger name="com.pingidentity.common.util.ErrorHandler" level="INFO" additivity="false">
            <AppenderRef ref="CONSOLE" />
            <AppenderRef ref="FILE" />
        </Logger>
        <Logger name="com.pingidentity.appserver.jetty" level="INFO" />
        <Logger name="org.apache" level="INFO" />
        <!-- Limit Jetty -->
        <Logger name="org.eclipse.jetty" level="INFO" />
        <Logger name="org.eclipse.jetty.io.nio" level="ERROR" />
        <Logger name="org.eclipse.jetty.jmx.ObjectMBean" level="ERROR" />
        <Logger name="org.eclipse.jetty.server.session" level="WARN" />
        <Logger name="org.apache.hivemind" level="INFO" />
        <!-- Limit the jgroups category -->
        <Logger name="org.jgroups" level="INFO" />
        <Logger name="com.pingidentity.jgroups.org.jgroups" level="WARN" />
        <Logger name="com.pingidentity.aws" level="INFO" />
        <!-- Limit the Amazon AWS SDK logging -->
        <Logger name="com.amazonaws" level="INFO" />
        <Logger name="com.pingidentity.locale" level="INFO" />
        <Logger name="com.pingidentity.sdk.locale" level="INFO" />
        <Logger name="org.apache.axis" level="INFO" />
        <Logger name="hsqldb.db" level="ERROR" />

        <!-- ================ -->
        <!-- Loggers -->
        <!-- ================ -->

        <AsyncLogger name="org.sourceid.saml20.bindings.BindingLogProxy"
                     level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="SamlTransaction" />
        </AsyncLogger>

        <!--
            IMPORTANT:

            The following appenders cannot be configured with any others:

            SecurityAuditToCEFSyslog-FAILOVER
            SecurityAuditToMySQLDB-FAILOVER
            SecurityAuditToPostgreSQLDB-FAILOVER
            SecurityAuditToSQLServerDB-FAILOVER
            SecurityAuditToOracleDB-FAILOVER

            Each must be the only appender referenced in the logger org.sourceid.websso.profiles.sp.SpAuditLogger.
            If one of these appenders is added, remove the existing reference to "SecurityAudit2File".
        -->
        <Logger name="org.sourceid.websso.profiles.sp.SpAuditLogger"
                level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="SecurityAudit2File"/>
            <!--
                <appender-ref ref="SecurityAuditToSQLServerDB-FAILOVER"/>
                <appender-ref ref="SecurityAuditToOracleDB-FAILOVER"/>
                <appender-ref ref="SecurityAuditToCEFSyslog-FAILOVER"/>
                <appender-ref ref="SecurityAuditToCEFFile"/>
                <appender-ref ref="SecurityAuditToMySQLDB-FAILOVER"/>
                <appender-ref ref="SecurityAuditToPostgreSQLDB-FAILOVER" />
                <appender-ref ref="SecurityAudit2Splunk"/>
                <appender-ref ref="SecurityAudit2File" />
            -->
        </Logger>

        <!--
            IMPORTANT:

            The following appenders cannot be configured with any others:

            SecurityAuditToCEFSyslog-FAILOVER
            SecurityAuditToMySQLDB-FAILOVER
            SecurityAuditToPostgreSQLDB-FAILOVER
            SecurityAuditToSQLServerDB-FAILOVER
            SecurityAuditToOracleDB-FAILOVER

            Each must be the only appender referenced in the logger org.sourceid.websso.profiles.idp.IdpAuditLogger.
            If one of these appenders is added, remove the existing reference to "SecurityAudit2File".
        -->
        <Logger name="org.sourceid.websso.profiles.idp.IdpAuditLogger"
                level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="SecurityAudit2File"/>
            <!--
                <appender-ref ref="SecurityAuditToCEFSyslog-FAILOVER"/>
                <appender-ref ref="SecurityAuditToCEFFile"/>
                <appender-ref ref="SecurityAuditToMySQLDB-FAILOVER"/>
                <appender-ref ref="SecurityAuditToPostgreSQLDB-FAILOVER" />
                <appender-ref ref="SecurityAuditToSQLServerDB-FAILOVER"/>
                <appender-ref ref="SecurityAuditToOracleDB-FAILOVER"/>
                <appender-ref ref="SecurityAudit2Splunk"/>
                <appender-ref ref="SecurityAudit2File" />
            -->
        </Logger>

        <!--
            IMPORTANT:

            The following appenders cannot be configured with any others:

            SecurityAuditToCEFSyslog-FAILOVER
            SecurityAuditToMySQLDB-FAILOVER
            SecurityAuditToPostgreSQLDB-FAILOVER
            SecurityAuditToSQLServerDB-FAILOVER
            SecurityAuditToOracleDB-FAILOVER

            Each must be the only appender referenced in the logger org.sourceid.websso.profiles.idp.AsAuditLogger.
            If one of these appenders is added, remove the existing reference to "SecurityAudit2File".
        -->
        <Logger name="org.sourceid.websso.profiles.idp.AsAuditLogger"
                level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="SecurityAudit2File"/>
            <!--
                <appender-ref ref="SecurityAuditToCEFSyslog-FAILOVER"/>
                <appender-ref ref="SecurityAuditToCEFFile"/>
                <appender-ref ref="SecurityAuditToMySQLDB-FAILOVER"/>
                <appender-ref ref="SecurityAuditToPostgreSQLDB-FAILOVER" />
                <appender-ref ref="SecurityAuditToSQLServerDB-FAILOVER"/>
                <appender-ref ref="SecurityAuditToOracleDB-FAILOVER"/>
                <appender-ref ref="SecurityAudit2Splunk"/>
                <appender-ref ref="SecurityAudit2File" />
            -->
        </Logger>

        <!--
            IMPORTANT:

            The following appenders cannot be configured with any others:

            SecurityAuditToCEFSyslog-FAILOVER
            SecurityAuditToMySQLDB-FAILOVER
            SecurityAuditToSQLServerDB-FAILOVER
            SecurityAuditToOracleDB-FAILOVER

            Each must be the only appender referenced in the logger org.sourceid.websso.profiles.idp.ClientRegistrationAuditLogger.
            If one of these appenders is added, remove the existing reference to "SecurityAudit2File".
        -->
        <Logger name="org.sourceid.websso.profiles.idp.ClientRegistrationAuditLogger"
                level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="SecurityAudit2File" />
            <!--
                <appender-ref ref="SecurityAuditToCEFSyslog-FAILOVER"/>
                <appender-ref ref="SecurityAuditToCEFFile"/>
                <appender-ref ref="SecurityAuditToMySQLDB-FAILOVER"/>
                <appender-ref ref="SecurityAuditToSQLServerDB-FAILOVER"/>
                <appender-ref ref="SecurityAuditToOracleDB-FAILOVER"/>
                <appender-ref ref="SecurityAudit2Splunk"/>
            -->
        </Logger>

        <!--
            IMPORTANT:

            The following appenders cannot be configured with any others:

            SecurityAuditToCEFSyslog
            SecurityAuditToMySQLDB-FAILOVER
            SecurityAuditToPostgreSQLDB-FAILOVER
            SecurityAuditToSQLServerDB-FAILOVER
            SecurityAuditToOracleDB-FAILOVER

            Each must be the only appender referenced in the logger org.sourceid.websso.profiles.idp.STSAuditLogger.
            If one of these appenders is added, remove the existing reference to "SecurityAudit2File".
        -->
        <Logger name="org.sourceid.wstrust.log.STSAuditLogger"
                level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="SecurityAudit2File" />
            <!--
                <appender-ref ref="SecurityAuditToCEFSyslog-FAILOVER"/>
                <appender-ref ref="SecurityAuditToCEFFile"/>
                <appender-ref ref="SecurityAuditToMySQLDB-FAILOVER"/>
                <appender-ref ref="SecurityAuditToPostgreSQLDB-FAILOVER" />
                <appender-ref ref="SecurityAuditToSQLServerDB-FAILOVER"/>
                <appender-ref ref="SecurityAuditToOracleDB-FAILOVER"/>
                <appender-ref ref="SecurityAudit2Splunk"/>
            -->
        </Logger>

        <!--
            IMPORTANT:

            The following appenders cannot be configured with any others:

            ProvisionerLogToOracleDB-FAILOVER
            ProvisionerLogToSQLServerDB-FAILOVER
            ProvisionerLogToMySQLDB-FAILOVER
            ProvisionerLogToPostgreSQLDB-FAILOVER

            Each must be the only appender referenced in the logger com.pingidentity.provisioner.
            If one of these appenders is added, remove the existing reference to "ProvisionerLog" and "CONSOLE-PROVISIONER".
        -->
        <AsyncLogger name="com.pingidentity.provisioner"
                     level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="ProvisionerLog" />
            <!--
                <appender-ref ref="CONSOLE-PROVISIONER" />
                <appender-ref ref="ProvisionerLogToOracleDB-FAILOVER"/>
                <appender-ref ref="ProvisionerLogToSQLServerDB-FAILOVER"/>
                <appender-ref ref="ProvisionerLogToMySQLDB-FAILOVER"/>
                <appender-ref ref="ProvisionerLogToPostgreSQLDB-FAILOVER" />
            -->
        </AsyncLogger>

        <Logger name="AuditLogger" level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="AdminAudit" />
        </Logger>

        <Logger name="EventDetailAuditLogger" level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="AdminEventDetailAudit" />
        </Logger>

        <Logger name="AdminApiAuditLogger" level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="AdminApiAudit" />
        </Logger>

        <Logger name="RuntimeApiAuditLogger" level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="RuntimeApiAudit" />
        </Logger>

        <!-- Log xml content before parsing-->
        <!--
             This new logger is disabled by default. When enabled, PingFederate may write sensitive user information
             to the server log. Consider enabling this logger for the sole purpose of troubleshooting in non-production
             environments only (and disabling this logger when it is no longer required).
        -->
        <!--
        <AsyncLogger name="com.pingidentity.common.util.xml.XmlBeansUtil" level="TRACE" additivity="false" includeLocation="false">
            <AppenderRef ref="FILE" />
        </AsyncLogger>
        -->

        <!-- ======================= -->
        <!-- Set up the Outbound provisioner audit logger -->
        <!-- ======================= -->
        <!--
        IMPORTANT:

        The following appenders cannot be configured with any others:

        OutboundProvisionerEventToSQLServerDB-FAILOVER
        OutboundProvisionerEventToOracleDB-FAILOVER
        OutboundProvisionerEventToMySQLDB-FAILOVER
        OutboundProvisionerEventToPostgreSQLDB-FAILOVER
        OutboundProvisionerEventToCEFSyslog-FAILOVER

        Each must be the only appender referenced in the logger com.pingidentity.provisioner.monitor.ProvisionerAuditLogger".
        If one of these appenders is added, remove the existing reference to "OutboundProvisionerEventToFile".
        -->

        <Logger name="ProvisionerAuditLogger" level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="OutboundProvisionerEventToFile" />
            <!--
            <appender-ref ref="OutboundProvisionerEventToSQLServerDB-FAILOVER"/>
            <appender-ref ref="OutboundProvisionerEventToOracleDB-FAILOVER"/>
            <appender-ref ref="OutboundProvisionerEventToMySQLDB-FAILOVER"/>
            <appender-ref ref="OutboundProvisionerEventToPostgreSQLDB-FAILOVER"/>
            <appender-ref ref="OutboundProvisionerEventToCEFSyslog-FAILOVER"/>
            <appender-ref ref="OutboundProvisionerEventToCEFFile"/>
            <appender-ref ref="OutboundProvisionerEventToSplunk"/>
            -->
        </Logger>

        <Logger name="com.pingidentity.appserver.jetty.PingFederateInit" level="ERROR" additivity="false" includeLocation="false">
            <AppenderRef ref="CONSOLE" />
        </Logger>

        <Logger name="org.pingidentity.RunPF" level="ERROR" additivity="false" includeLocation="false">
            <AppenderRef ref="CONSOLE" />
        </Logger>

        <!-- ======================= -->
        <!-- Set up the Root logger -->
        <!-- ======================= -->
        <!--
            IMPORTANT:

            There can only be one Root logger, either <AsyncRoot> or <Root>.

            For database logging, comment the <AsyncRoot> block and uncomment the <Root> block.
        -->
        
        <AsyncRoot level="INFO" includeLocation="false">
            <AppenderRef ref="CONSOLE" />
            <AppenderRef ref="FILE" />
        </AsyncRoot>
       
        <!--
        <Root>
            <AppenderRef ref="FILE"/>
            <AppenderRef ref="CONSOLE" />
        </Root>
        -->

        <!--
            The database connection pooling settings can be tuned in log4j2.db.properties.

            This Root logger will log to the configured database. The bufferSize defined in the appender
            will determine how often events are flushed to the database.
        -->
        <!--
        <Root level="INFO" includeLocation="false">
            <AppenderRef ref="ServerLogToOracleDB-FAILOVER" />
            <AppenderRef ref="ServerLogToSQLServerDB-FAILOVER" />
            <AppenderRef ref="ServerLogToMySQLDB-FAILOVER" />
            <AppenderRef ref="ServerLogToPostgreSQLDB-FAILOVER" />
        </Root>
        -->

    </Loggers>

</Configuration>
